Doc assumes heads-up fixed limit with 4 raises (including initial bet).

(Mixed) strategy for each branch node is percentage for each option, which add up to 100%. Options are fold/check/bet or fold/call/raise.

Pre-flop:
=========

SB ante is BB/2.

For each of SB and BB there are 169 hands.

All bets are BB x 1, except for the initial 'check' pseudo-bet of the SB, which is effectively 

Betting sequences are (SB goes first, in smalls, BB goes second):

f = fold
x = check
c = call
b = bet
r = raise

Node "" - pot BB + BB/2 - SB acts:

f - terminal, BB wins BB/2
x - i.e. 'call' BB, add BB/2 to pot, pot is BB*2
b - add BB/2 + BB to pot

Node "x" - pot BB*2 - BB acts:

F - terminal, SB wins BB*1
X - terminal->flop pot is BB*2
B - add BB to pot

Node "b" - pot BB*3 - BB acts:

F - terminal, SB wins BB*1
C - terminal->flop, add BB to pot, pot is BB*4
R - add 2*BB to pot

Node "xB" - pot BB*3 - SB acts:

f - terminal, BB wins BB*1
c - terminal->flop, add BB to pot, pot is BB*4
r - add 2*BB to pot

Node "bR" - pot BB*5 - SB acts

f - terminal, BB wins BB*2
c - terminal->flop, add BB to pot, pot is BB*6
r - add 2*BB to pot

Node "xBr" - pot BB*5 - BB acts

F - terminal, SB wins BB*2
C - terminal->flop, add BB to pot - pot is BB*6
R - add 2*BB to pot

Node "bRr" - pot BB*7 - BB acts

F - terminal, SB wins BB*3
C - terminal->flop, add BB to pot, pot is BB*8
R - add 2*BB to pot

Node "xBrR" - pot BB*7 - SB acts

f - terminal, BB wins BB*3
c - terminal->flop, add BB to pot, pot is BB*8
r - add 2*BB to pot

Node "bRrR" - pot BB*9 - SB acts

f - terminal, BB wins BB*4
c - terminal->flop, add BB to pot, pot is BB*10
[note, maximum raises now]

Node "xBrRr" - pot BB*9 - BB acts

f - terminal, SB wins BB*4
c - terminal->flop, add BB to pot, pot is BB*10
[note, maximum raises now]

--

For SB there are 5 activity nodes for each hand, i.e. 5*169 = 845 strategy nodes pre-flop
For BB there are 5 activity nodes for each hand, i.e. 5*169 = 845 strategy nodes pre-flop

There are 9 paths to the flop.

-----------------------------------------------------------------------------------------------------------------

Flop:
====

As above, each of SB and BB has 169*9 = 1521 different paths to the flop before flop cards are dealt.

3 more cards. Ignoring symmetries, there are select(50,3) = 50*49*48/(3*2) = 19,600 flops in the strategy for each of SB and BB.

From companion doc, the total number of hole+flop equiv classes for each of SB and BB is 1,457,890 in 26 categories. For each of those, there are 9 paths to the flop.

Betting is exactly the same structure as pre-flop, except BB goes first.

Again, 5 activity nodes for each of SB and BB, making 1,457,890*9 *5 = 65,605,050 strategy nodes post-flop for each of SB and BB.

That's awkward, but still within DRAM constraints of modern machines.

There are 9 paths to the Turn.

-------------------------------------------------------------------------------------------------------------------

Turn:
====

As above, each of SB and BB has 1,457,890*9*9 = 118,089,090 paths to the Turn.

1 more card. Ignoring symmetries, there are 47 different turn cards. There are a bunch more symmetry classes here which makes formal reduction even harder. Need to compute this exactly.

Betting is exactly the same as the Flop.

5 activity nodes for each of SB and BB, making 1,457,890*9*9 *47*5 = 27,750,936,150 strategy nodes for each of SB and BB.

That's getting into the realm of very awkward.


--------------------------------------------------------------------------------------------------------------------

River:
=====

As above, each of SB and BB has 1,457,890*9*9 *47*9 = 49,951,685,070 paths to the River.

1 more card. Ignoring symmetries, there are 46 different river cards. Again symmetry calulation is tricky. TODO.

Betting is exactly the same as the Flop and Turn.

5 activity nodes for each of SB and BB making 1,457,890*9*9 *47*9*46*5 = 11,488,887,566,100 strategy nodes for each of SB and BB.

We could store this on large hard drives - it's order 100's of TB's, but it seems rather awkward to calculate :D.


---------------------------------------------------------------------------------------------------------------------

So, clearly pre-Turn strategy can relatively comfortably be perfectly modeled.

So, the next question is how to reduce the combinatorial explosion post-Flop.

Ideas
  - tune pre-Turn strategy and aggressively consolidate very low-probability paths in Turn and beyond. But how to tune without a Turn and River model?
  - start by modeling Turn and River according to straight hand odds. How does that relate to mixed strategy?
  - expand most frequent Turn/River nodes while using simple strategy for others - this would relate to 1/1000th of actual Turn nodes, and 1/1,000,000th of River node.
  - probably better to clump more effectively, e.g. at River by actual hand and betting history (and which street hand was made).
  - but would be super interesting to see what the distribution of strategy node probabilities is at River and turn (or even at flop!).
  - i.e. do a slowly expanding strategy tree through flop, river and turn.
  - I see there are commercial engines that maintain sparse models and then do real-time re-eval.



